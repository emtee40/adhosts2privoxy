adhosts2privoxy

1. License
----------
Copyright (c) 2018 Lcferrum

This program comes with no warranty.
You must use this program at your own risk.
Licensed under BSD 2-Clause License - see LICENSE file for details.

2. About
--------
This python script converts multiple hosts files to single Privoxy action file.
It has simple built-in download functionality so you can supply web address to
the script instead of specifying local file path. Script gets information about
needed hosts files via config file.

3. Where to get
---------------
Main project homepage is at GitHub:

	https://github.com/lcferrum/adhosts2privoxy

4. Usage
--------
On Linux/Mac:
       ./adhosts2privoxy.py [CONFIG [ACTION_FILE [HOSTS_DIR]]]

On Windows:
       python adhosts2privoxy.py [CONFIG [ACTION_FILE [HOSTS_DIR]]]

CONFIG is a relative (to current dir) or absolute path to config file
containing list of input hosts files (default: 'adhosts2privoxy.conf'). More on
config file in next section. Config file should have the same encoding as
current locale one. ACTION_FILE is a relative (to current dir) or absolute path
to resulting Privoxy action file (default: 'hosts.action'). Action file will be
written using current locale encoding. HOSTS_DIR is a relative (to current dir)
or absolute path to directory where hosts files are located or will be
downloaded to (defaults to current directory). You can specify absolute path
for each hosts file in config - in this case, HOSTS_DIR is ignored for such
files.

Built-in download functionality is good enough for most hosted hosts files on
the web. It takes in account Content-Disposition and Content-Type headers,
supports Internationalized Domain Names. But you can always specify local file
path for hosts file in config, instead of URL, if you don't need to download
anything or prefer to rely on external download utilities such Wget or Curl.

When hosts file is processed by the script, it's hostnames (and aliases) become
patterns for 'block' action in Privoxy action file. Multiple hostnames are
collapsed in single pattern if there is a hostname that acts as high level
domain for all of them. For example, consider this hosts file:

	0.0.0.0 ads.foo.bar virii.foo.bar
	0.0.0.0 foo.bar
	0.0.0.0 more.ads.foo.bar
	0.0.0.0 ad1.foo.baz ad2.foo.baz

After processing it, resulting action file is similar to this:

	{+block}
	.foo.bar
	.ad1.foo.baz
	.ad2.foo.baz

Script algorithm skips malformed hosts entries or entries with "non-blocking"
IPs. Only following IPs are cosidered "blocking": whole 127.0.0.0/8 network
(incl. 127.0.0.1), 0.0.0.0, ::1, ::. Also, typical "loopback" and "localhost"
hostnames are ignored.

Some of the defaults and pre-defined values, mentioned in this section, can be
easily changed in the script source code - they are all initialized in the very
beginning of the script, hard to miss. Refer to the source code for more
information on modifying defaults.

5. Configuration file
---------------------
WIP
